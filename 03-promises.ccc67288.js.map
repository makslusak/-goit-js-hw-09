{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAAvC,MACMC,EAAWF,SAASC,cAAc,kBAClCE,EAAUH,SAASC,cAAc,iBACjCG,EAAYJ,SAASC,cAAc,mBAC1BD,SAASC,cAAc,mBAE/BI,iBAAiB,SAGxB,SAAsBC,GAuBtB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAEvBL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CA7BjCH,EAAIU,iBACJC,YAAW,KACTC,QAAQC,IAAI,qBACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAUiB,cAAeD,GAAG,EAC9CE,EAAiBF,EAAI,EACpBH,YAAW,KACTV,EAAce,EAAgBnB,EAAQkB,eAEpCE,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBX,EAAA0B,OAAOC,QAAQ,qBAAqBjB,QAAeC,MAAU,IAE9DiB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA0B,OAAOG,QAAQ,oBAAoBnB,QAAeC,MAAU,GAC5D,GAEHN,EAAQkB,eAEbH,QAAQC,IAAI,oBAA2B,GAErCjB,EAASmB,c,IAtBf,IAAIC,EAAiB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst delayRef = document.querySelector('[name=\"delay\"]');\nconst stepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\nconst btnRef = document.querySelector('[type=\"submit\"]');\n\nbtnRef.addEventListener('click', onFormSubmit);\nlet promisPosition = 0;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  setTimeout(() => {\n    console.log(11111111111111111111111111)\n    for (let i = 0; i < amountRef.valueAsNumber; i+=1) {\n      promisPosition = i + 1;\n       setTimeout(() => {\n         createPromise(promisPosition, stepRef.valueAsNumber)\n\n          .then(({ position, delay }) => {\n            Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n        ,stepRef.valueAsNumber)\n    }\n    console.log(22222222222222222222222222)\n  }\n    , delayRef.valueAsNumber\n  );\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n       \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n  });\n}\n\n\n"],"names":["$iQIUW","parcelRequire","document","querySelector","$47d4ff9957288465$var$delayRef","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","addEventListener","evt","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","preventDefault","setTimeout","console","log","i","valueAsNumber","$47d4ff9957288465$var$promisPosition","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.ccc67288.js.map"}